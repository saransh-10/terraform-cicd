name: Base Terraform Plan Template

on:
  workflow_dispatch: 
  workflow_call:
    secrets:
      Azure_Credential:
        required: true
      ARM_SECRET:
        required: true
      ARM_CLIENT_ID:
        required: true
      ARM_SUBSCRIPTION_ID:
        required: true
      ARM_TENANT_ID:
        required: true
      ARM_CLIENT_SECRET:
        required: true

    inputs:
      environment:
        required: true
        type: string

      var_file:
        required: true
        type: string
      

jobs:
  terraform-plan:
    name: Terraform Plan "${{ inputs.environment }}"
    runs-on: ubuntu-latest
    environment:
      name: ${{ inputs.environment}}

    steps:
      # Checkout the repository
      - name: Checkout
        uses: "actions/checkout@v4"

      # Install Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      # Authenticate to Azure
      - name: Login to Azure
        run: |
          az login --service-principal \
            --username ${{ secrets.ARM_CLIENT_ID }} \
            --password ${{ secrets.ARM_CLIENT_SECRET }} \
            --tenant ${{ secrets.ARM_TENANT_ID }}
          
      - name: Terraform Init with Options
        run: |
          terraform init \
            # # -input=false \
            # # -backend-config="resource_group_name=Orica-RG" \
            # # -backend-config="storage_account_name=oricatest3" \
            # # -backend-config="container_name=tfstate" \
            # # -backend-config="key=terraform1.tfstate" \
            # -backend-config="client_id=${{ secrets.ARM_CLIENT_ID }}" \
            # -backend-config="client_secret=${{ secrets.ARM_CLIENT_SECRET }}" \
            # -backend-config="tenant_id=${{ secrets.ARM_TENANT_ID }}" \
            # -backend-config="subscription_id=${{ secrets.ARM_SUBSCRIPTION_ID }}" \
        working-directory: ${{ github.workspace }}/Workload

      # Generate the execution plan for Terraform
      # An exit code of 0 indicated no changes, 1 a terraform failure, 2 there are pending changes

      - name: Terraform Plan
        run: terraform plan -out=terraform.tfplan -var-file=${{ github.workspace }}/Deployment/${{ inputs.var_file }}
        working-directory: ${{ github.workspace }}/Workload

      # Save plan to artifacts
      - name: Upload Terraform Plan
        id: upload_plan
        uses: actions/upload-artifact@v3
        with:
          name: tfplan
          path: ${{ github.workspace }}
